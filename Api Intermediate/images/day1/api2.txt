let axios = require('axios')

async function getWinnerTotalGoals(competition, year) {
    
    let promises = await axios.get(`https://jsonmock.hackerrank.com/api/football_competitions?name=${competition}&year=${year}`)
    
    let response = promises.data
    
    let winner = response.data[0].winner
    
    //console.log(winner)
    
    let promisetwo = await axios.get(`https://jsonmock.hackerrank.com/api/football_matches?competition=${competition}&year=${year}&team1=${winner}`)
    
    let response2 = promisetwo.data
    
    let pages = response2.total_pages
    
    let sum = 0;
    
    let iterator = 1;
    
    while(iterator <= pages){
        
        let promisethree = await axios.get(`https://jsonmock.hackerrank.com/api/football_matches?competition=${competition}&year=${year}&team1=${winner}&page=${iterator}`)
        
        
        let arraydata = promisethree.data.data
        
        //console.log(arraydata)
        
        let summed = arraydata.reduce((total,curent)=>{
            
            return total + Number.parseInt(curent.team1goals);
            
        },0)
        
        sum = sum + summed;
        
    
        iterator++;
    }
    
   
    
     let promiseteam2 = await axios.get(`https://jsonmock.hackerrank.com/api/football_matches?competition=${competition}&year=${year}&team2=${winner}`)
    
    let responseteam2 = promiseteam2.data
    
    let pagesteam2 = responseteam2.total_pages
    
    
    let iterator2 = 1;
    
    while(iterator2 <= pagesteam2){
        
        let promisethree = await axios.get(`https://jsonmock.hackerrank.com/api/football_matches?competition=${competition}&year=${year}&team2=${winner}&page=${iterator2}`)
        
        
        let arraydata = promisethree.data.data
        
        
        let summed = arraydata.reduce((total,curent)=>{
            
            return total + Number.parseInt(curent.team2goals);
            
        },0)
        
        sum = sum + summed;
        
    
        iterator2++;
    }
    
    return sum

}
